{"home":{"content":"# Lecture 4: Layouts \n---\n\nWelcome to Lecture 4! Here's a brief breakdown of today's class.\n\n#### Learning Objectives\n---\n1. Understand how we can use CSS concepts to achieve multiple layouts for our webpages\n2. Specifically, learn how to use floats to achieve multi-column grids\n3. Additionally, explore how we can use flexbox to ahieve the same multi-column grids, but with fewer headaches\n\n#### Rundown\n---\n\n#### [Warmup](#warmup)\n#### [Floats](#floats)\n#### [FlexBox](#flexbox)\n#### [Practical CSS3 Use Cases](#practical-css3-use-cases)\n#### [Multiple Screens](#multiple-screens)\n#### [Frontend Frameworks](#frontend-frameworks)\n","idx":0},"title":{"content":"Achieving Layouts with CSS","idx":1},"desc":{"content":"An introduction to floats and flexbox as a means for building various webpage layouts","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin by recapping what we covered last week.\n\n#### Wendy Bite\n---\n\nLet's go ahead and complete the Wendy Bite Assignment from last week.\n\n#### [Code From Last Class](https://github.com/FEWDMaterials/FEWD629_WendyBiteLecture4_Notes)\n\nOur goal is to complete this assignment using best class naming and resuing practices.\n\n#### Box Model Review\n---\n\n![Image](http://www.w3schools.com/css/box-model.gif)\n\nLet's talk through this. \n\nWhat is the **border**? The **padding**? The **margin**? How do they relate to layouts?\n\n#### Review\n---\n\n1. ##### [Display Inline to Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_to_block) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_to_block)\n\n2. ##### [Display Block to Inline-Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_block_only) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_block_only)\n\n3. ##### [Simple Layouts](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Simple_Layout) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Simple_Layout)\n","idx":3},"floats":{"content":"# Floats\n---\n\nDisplay methods, while effective, don't go very far in helping us make effective layouts. Floats are a concept (though kind of convoluted) which help us build complex layouts and grids with more ease.\n\n## [Technical Example](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Floats_Ex) | [Live Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Floats_Ex)\n\n#### Exercises\n---\nWe will solve these problems after our discussion period.\n\n#### [Simple Layouts with floats](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Simple_Layouts_with_floats) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Simple_Layouts_with_floats)\n\n#### [Addding Float](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Addding_Float) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Addding_Float)\n\n#### [Simple Clears](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Simple_Clears) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Simple_Clears)\n#### [Using Clearfix](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Using_Clearfix) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Using_Clearfix)\n\n<p></p>\n<p></p>\n\n\n#### Examples\n---\nWe will use these examples to understand the concept at hand.\n\n#### [Simple Three Column Layout](http://fewd.us/howdoi/#/problem/4258)\n#### [Clearfixing the Parent](http://fewd.us/howdoi/#/problem/4702)\n#### [Practical Example](http://fewd.us/howdoi/#/problem/4927)\n\n<p></p>\n<p></p>\n\n#### Important Facts\n---\n\n1. How do they work??\n2. A left-floated box will shift to the left until its leftmost margin edge (or border edge if margins are absent) touches either the edge of the containing block, or the edge of another floated box\n3. If the size of the floated box exceeds the available horizontal space, the floated box will be shifted down\n4. Non-positioned, non-floated, block-level elements act as if the floated element is not there, since the floated element is out of flow in relation to other block elements\n5. The root element (<html>) cannot be floated\n5. An inline element that is floated is converted to a block-level element\n\n","idx":4},"flexbox":{"content":"# FlexBox\n---\n","idx":5},"practical-css3-use-cases":{"content":"# Practical CSS3 Use Cases\n---\n","idx":6},"multiple-screens":{"content":"# Multiple Screens\n---\n","idx":7},"frontend-frameworks":{"content":"# Frontend Frameworks\n---\n","idx":8},"__list__":["home","title","desc","warmup","floats","flexbox","practical-css3-use-cases","multiple-screens","frontend-frameworks"]}