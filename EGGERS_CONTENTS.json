{"home":{"content":"# Lecture 4: Layouts \n---\n\nWelcome to Lecture 4! Here's a brief breakdown of today's class.\n\n#### Learning Objectives\n---\n1. Understand how we can use CSS concepts to achieve multiple layouts for our webpages\n2. Specifically, learn how to use floats to achieve multi-column grids\n3. Additionally, explore how we can use flexbox to ahieve the same multi-column grids, but with fewer headaches\n\n#### Rundown\n---\n\n#### [Warmup](#warmup)\n#### [Floats](#floats)\n#### [FlexBox](#flexbox)\n#### [Practical CSS3 Use Cases](#practical-css3-use-cases)\n#### [Multiple Screens](#multiple-screens)\n#### [Frontend Frameworks](#frontend-frameworks)\n","idx":0},"title":{"content":"Achieving Layouts with CSS","idx":1},"desc":{"content":"An introduction to floats and flexbox as a means for building various webpage layouts","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin by recapping what we covered last week.\n\n#### Wendy Bite\n---\n\nLet's go ahead and complete the Wendy Bite Assignment from last week.\n\n#### [Code From Last Class](https://github.com/FEWDMaterials/FEWD629_WendyBiteLecture4_Notes)\n\nOur goal is to complete this assignment using best class naming and resuing practices.\n\n#### Box Model Review\n---\n\n![Image](http://www.w3schools.com/css/box-model.gif)\n\nLet's talk through this. \n\nWhat is the **border**? The **padding**? The **margin**? How do they relate to layouts?\n\n#### Review\n---\n\n1. ##### [Display Inline to Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_to_block) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_to_block)\n\n2. ##### [Display Block to Inline-Block](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Inline_block_only) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Inline_block_only)\n\n3. ##### [Simple Layouts](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Box_Model_Simple_Layout) | [LIVE Instructor Version](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Box_Model_Simple_Layout)\n","idx":3},"floats":{"content":"# Floats\n---\n\nDisplay methods, while effective, don't go very far in helping us make effective layouts. Floats are a concept (though kind of convoluted) which help us build complex layouts and grids with more ease.\n\n## [Technical Example](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Floats_Ex) | [Live Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Floats_Ex)\n\n#### Exercises\n---\nWe will solve these problems after our discussion period.\n\n#### [Simple Layouts with floats](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Simple_Layouts_with_floats) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Simple_Layouts_with_floats)\n\n#### [Addding Float](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Addding_Float) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Addding_Float)\n\n#### [Simple Clears](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Simple_Clears) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Simple_Clears)\n#### [Using Clearfix](http://samantha.fewd.us/#fork/mottaquikarim/FEWD_Using_Clearfix) | [Live Instructor Notes](http://samantha.fewd.us/#broadcast/mottaquikarim/FEWD_Using_Clearfix)\n\n<p></p>\n<p></p>\n\n\n#### Examples\n---\nWe will use these examples to understand the concept at hand.\n\n#### [Simple Three Column Layout](http://fewd.us/howdoi/#/problem/4258)\n#### [Clearfixing the Parent](http://fewd.us/howdoi/#/problem/4702)\n#### [Practical Example](http://fewd.us/howdoi/#/problem/4927)\n\n<p></p>\n<p></p>\n\n#### Important Facts\n---\n\n1. How do they work??\n2. A left-floated box will shift to the left until its leftmost margin edge (or border edge if margins are absent) touches either the edge of the containing block, or the edge of another floated box\n3. If the size of the floated box exceeds the available horizontal space, the floated box will be shifted down\n4. Non-positioned, non-floated, block-level elements act as if the floated element is not there, since the floated element is out of flow in relation to other block elements\n5. The root element (<html>) cannot be floated\n5. An inline element that is floated is converted to a block-level element\n\n\n#### Clears\n---\n\n1. This is the anti-float\n2. clearing an item (can be a floated or non floated item) will undo the effects of the float\n3. if we're smart about how we arrange our tag structures, we don't really need to rely on this too much\n\n#### The Collapsing Parent\n---\n\n1. float the parent (meh)\n2. empty div in markup with clear: both (meh)\n3. overflow: hidden or auto (better)\n4. clearfix (best)\n\n","idx":4},"flexbox":{"content":"# FlexBox\n---\n\nFlexbox is the newest standard which aims to help make it easier to build modern web interfaces with CSS. It's a spec that gives us ways to [\"lay out, align and distribute space among items in a container\"](https://css-tricks.com/snippets/css/a-guide-to-flexbox/).\n\n---\n## Intended for wednesday\n---\n\n\n\n\n#### Flex container\n---\n\nThis is the parent of the items you want to flex.\n\n#### Some properties\n---\n\n1. display\n2. flex-direction\n3. flex-wrap\n4. justify-content\n5. align-items\n6. align-content\n\n#### Flex items\n---\n\nThese are the properties for the children\n\n#### Some properties\n---\n\n1. order\n2. flex-grow\n3. flex-shrink\n4. align-self\n\nAlso, clear, float and vertical align have no effect on flex'd items.\n\n[More info here](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\n#### Practice\n---\n\n1. [http://fewd.us/jargon/#/problem/10097](http://fewd.us/jargon/#/problem/10097)\n2. [http://fewd.us/jargon/#/problem/10098](http://fewd.us/jargon/#/problem/10098)\n3. [http://fewd.us/jargon/#/problem/10099](http://fewd.us/jargon/#/problem/10099)\n4. [http://fewd.us/jargon/#/problem/10100](http://fewd.us/jargon/#/problem/10100)","idx":5},"practical-css3-use-cases":{"content":"# Practical CSS3 Guidelines\n---\n\n**Learning Objective**: Understand the implementation of CSS3 as a technique for enhancing user experience.\n\n---\n\n\nLet's talk about **CSS**, or **Cascading Style Sheets**, the language that allows us to define styles and adjustments to default content on our webpages.\n\n\n**[Exhaustive list of CSS properties and values](http://www.w3schools.com/cssref/)**\n\n#### CSS Use Cases\n---\n\nHere are some interesting use cases where CSS3 in particular becomes super handy.\n\n#### Animations\n---\n\nYou can do some really awesome work with animating your elements.\n\n* **[Spinner](http://fewd.us/howdoi/#/problem/42730)**\n\n* **[Repeating, multiple animations](http://fewd.us/howdoi/#/problem/4270)**\n\n#### Transitions\n---\n\nTransitions are animations that are triggered usually by some form of user interaction.\n\n* **[Hover Effects](http://fewd.us/howdoi/#/problem/4268)**\n\n#### Pseudo Selectors\n---\n\nPsuedo classes allow us to style specific types of element features, **i.e.** the **:hover** pseudo selector can be used to style an element as the user puts his mouse over it.\n\n* **[Menu Hover Effect](http://fewd.us/howdoi/#/problem/4957)**\n\nOther examples of pseudo selectors: **:visited**, **:after**, etc\n\n#### Overflows\n---\n\nKeep track of content and determine how it should behave if there is more content than space in the container.\n\n* **[Overflow Example](http://fewd.us/howdoi/#/problem/4165)**\n\n#### Grids\n---\n\nThis one is super expansive and you could literally teach an entire course on this. For now, take a look at a few examples / problems to gain perspective on this.\n\n* **[Vertically and Horizontally Center](http://fewd.us/jargon/#/problem/10099)**\n\n* **[Three Column Grid](http://fewd.us/howdoi/#/problem/4258)**\n\n* **[Flex Align/Justify](http://fewd.us/jargon/#/problem/10100)**\n\n* **[Flex Direction](http://fewd.us/jargon/#/problem/10097)**\n\n* **[Flex Wrap](http://fewd.us/jargon/#/problem/10098)**\n\n#### References\n---\n1. **[Exhaustive Guide to Flex](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)**\n2. **[CSS Animations Reference](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations)**\n3. \n**[Exhaustive list of CSS properties and values](http://www.w3schools.com/cssref/)**\n4. **[Exhaustive list of CSS3 properties](http://www.tutorialrepublic.com/css-reference/css3-properties.php)**\n","idx":6},"multiple-screens":{"content":"# Multiple Screens\n---\n","idx":7},"frontend-frameworks":{"content":"# Frontend Frameworks\n---\n","idx":8},"__list__":["home","title","desc","warmup","floats","flexbox","practical-css3-use-cases","multiple-screens","frontend-frameworks"]}